{"ast":null,"code":"var _jsxFileName = \"/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useInput = initialValues => {\n  _s();\n\n  const [value, setValue] = useState(initialValues);\n  const [isDirty, setDirty] = useState(false);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onBlur = e => {\n    setDirty(true);\n  };\n\n  return {\n    value,\n    onChange,\n    onBlur\n  };\n};\n\n_s(useInput, \"V/3MMvudvKj9Roufxf7FATWIlto=\");\n\nconst Form = () => {\n  _s2();\n\n  const email = useInput('');\n  const password = useInput('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check components/Form.js file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Below you fill find register and login forms.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Validate values of each field on your preferences. The more secure the better.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"After user submitted register form inform him about it and store user data somewhere.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"When submiting login form check if such a user has been registered.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user exists hide all the forms and show a test 'Logged in successfully'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user does not exist then show an error message below login button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => email.onChange(e),\n        onBlur: e => email.onBlur(e),\n        value: email.value,\n        placeholder: \"Login\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => password.onChange(e),\n        onBlur: e => password.onBlur(e),\n        value: email.value,\n        placeholder: \"Password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email.value,\n        placeholder: \"Login\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email.value,\n        placeholder: \"Password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Form, \"00Z0tan0DaOsOe3pLeP/51Sw9SI=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js"],"names":["React","Formik","Field","ErrorMessage","useInput","initialValues","value","setValue","useState","isDirty","setDirty","onChange","e","target","onBlur","Form","email","password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik, Field, ErrorMessage} from 'formik'\n\nconst useInput = (initialValues) => {\n  const [value, setValue] = useState(initialValues)\n  const [isDirty, setDirty] = useState(false)\n\n  const onChange = (e) => {\n      setValue(e.target.value)\n  }\n\n  const onBlur = (e) => {\n      setDirty(true)\n  }\n\n  return {\n    value,\n    onChange,\n    onBlur\n  }\n}\n\nconst Form = () => {\n  const email = useInput('');\n  const password = useInput('');\n\n\n  return (\n    <div>\n      <h1>Check components/Form.js file</h1>\n      <p>Below you fill find register and login forms.</p>\n      <p>Validate values of each field on your preferences. The more secure the better.</p>\n      <p>After user submitted register form inform him about it and store user data somewhere.</p>\n      <p>When submiting login form check if such a user has been registered.</p>\n      <p>If user exists hide all the forms and show a test 'Logged in successfully'</p>\n      <p>If user does not exist then show an error message below login button</p>\n      <div>\n        <h1>Register</h1>\n        <input onChange={e => email.onChange(e)} onBlur={e => email.onBlur(e)} value={email.value} placeholder=\"Login\" type=\"text\" />\n        <input onChange={e => password.onChange(e)} onBlur={e => password.onBlur(e)} value={email.value} placeholder=\"Password\" type=\"password\" />\n        <input type=\"submit\" value=\"Register\" />\n      </div>\n      <div>\n        <h1>Login</h1>\n        <input value={email.value} placeholder=\"Login\" type=\"text\" />\n        <input value={email.value} placeholder=\"Password\" type=\"password\" />\n        <input type=\"submit\" value=\"Login\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}