{"ast":null,"code":"var _jsxFileName = \"/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react'; // import {Formik, Form, Field, ErrorMessage} from 'formik'\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const useForm = validate => {\n    _s();\n\n    const [values, setValues] = useState({\n      email: '',\n      password: ''\n    });\n    const [errors, setErrors] = useState({});\n\n    const handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      setValues({ ...values,\n        [e.target.name]: e.target.value\n      });\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      setErrors(validate(values));\n    };\n\n    return {\n      handleChange,\n      values,\n      handleSubmit,\n      errors\n    };\n  };\n\n  _s(useForm, \"hbwmmafgNExvAsThGpBhVHixy1k=\");\n\n  const validateInput = values => {\n    let errors = {};\n\n    if (!values.name.trim()) {\n      errors.name = \"Username required\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 8) {\n      errors.password = \"Password should be 8 or more characters\";\n    }\n\n    return errors;\n  };\n\n  const {\n    handleChange,\n    values,\n    handleSubmit\n  } = useForm(validate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check components/Form.js file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Below you fill find register and login forms.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Validate values of each field on your preferences. The more secure the better.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"After user submitted register form inform him about it and store user data somewhere.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"When submiting login form check if such a user has been registered.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user exists hide all the forms and show a test 'Logged in successfully'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user does not exist then show an error message below login button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: values.login,\n        onChange: handleChange,\n        placeholder: \"Login\",\n        type: \"text\",\n        name: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: values.password,\n        onChange: handleChange,\n        placeholder: \"Password\",\n        type: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Login\",\n        type: \"text\",\n        name: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Form, \"52NFAi/g2GpwUAy4uwm8jdjlJJ4=\", true);\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js"],"names":["React","useState","useEffect","Form","useForm","validate","values","setValues","email","password","errors","setErrors","handleChange","e","name","value","target","handleSubmit","preventDefault","validateInput","trim","length","login"],"mappings":"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","sourcesContent":["import React from 'react';\n// import {Formik, Form, Field, ErrorMessage} from 'formik'\nimport { useState, useEffect } from 'react';\n\n\n\nconst Form = () => {\n  \n  const useForm = (validate) => {\n    const [values, setValues] = useState({\n      email: '',\n      password: '',\n    });\n    const [errors, setErrors] = useState ({});\n\n    const handleChange = e => {\n      const {name, value} = e.target;\n      setValues({\n        ...values,\n        [e.target.name]: e.target.value\n      })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setErrors(validate(values));\n    }\n    return {handleChange, values, handleSubmit, errors};\n  };\n\n  const validateInput = (values) => {\n    let errors = {};\n\n    if (!values.name.trim()) {\n      errors.name = \"Username required\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 8) {\n      errors.password = \"Password should be 8 or more characters\";\n    }\n    return errors;\n  }\n\n  const {handleChange, values, handleSubmit} = useForm(validate);\n\n  return (\n    <div>\n      <h1>Check components/Form.js file</h1>\n      <p>Below you fill find register and login forms.</p>\n      <p>Validate values of each field on your preferences. The more secure the better.</p>\n      <p>After user submitted register form inform him about it and store user data somewhere.</p>\n      <p>When submiting login form check if such a user has been registered.</p>\n      <p>If user exists hide all the forms and show a test 'Logged in successfully'</p>\n      <p>If user does not exist then show an error message below login button</p>\n      <div onSubmit={handleSubmit}>\n        <h1>Register</h1>\n        <input value={values.login} onChange={handleChange} placeholder=\"Login\" type=\"text\" name=\"login\"/>\n        \n        <input value={values.password} onChange={handleChange} placeholder=\"Password\" type=\"password\" name=\"password\"/>\n        <input type=\"submit\" value=\"Register\" />\n      </div>\n      <div>\n        <h1>Login</h1>\n        <input  placeholder=\"Login\" type=\"text\" name=\"login\" />\n        <input placeholder=\"Password\" type=\"password\" name=\"password\" />\n        <input type=\"submit\" value=\"Login\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}