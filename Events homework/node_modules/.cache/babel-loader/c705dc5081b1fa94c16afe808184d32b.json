{"ast":null,"code":"var _jsxFileName = \"/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// const validationSchema = Yup.object({\n//   login: Yup.string().required('Please enter the login').min(10, 'Your login should be 10 characters or more'),\n//   password: Yup.string().required('Please enter the password').min(8, 'Your password should be at least 8 characters')\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    login: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({\n    login: \"\",\n    password: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = event => {\n    console.log(event.target.name);\n    console.log(event.target.value);\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(validate(values));\n    set;\n    submit();\n  };\n\n  function submit() {\n    console.log(\"Submitted Successfully\");\n  }\n\n  function validate(values) {\n    let errors = {};\n\n    if (!values.login) {\n      errors.login = \"Login is required\";\n    } else if (values.login.length < 8) {\n      errors.login = \"Email address should be 8 or more characters\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 10) {\n      errors.password = \"Password needs to be more than 10 characters\";\n    }\n\n    return errors;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check components/Form.js file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Below you fill find register and login forms.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Validate values of each field on your preferences. The more secure the better.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"After user submitted register form inform him about it and store user data somewhere.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"When submiting login form check if such a user has been registered.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user exists hide all the forms and show a test 'Logged in successfully'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user does not exist then show an error message below login button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Login\",\n        type: \"text\",\n        name: \"login\",\n        value: values.login,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), errors.login && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        value: values.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Login\",\n        type: \"text\",\n        name: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Form, \"Un9vlvQpXoPrwNqN8apfCFv4EmE=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js"],"names":["React","useState","Form","values","setValues","login","password","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","event","console","log","target","name","value","handleSubmit","preventDefault","validate","set","submit","length"],"mappings":"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","sourcesContent":["import React, { useState }from 'react';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n\n// const validationSchema = Yup.object({\n//   login: Yup.string().required('Please enter the login').min(10, 'Your login should be 10 characters or more'),\n//   password: Yup.string().required('Please enter the password').min(8, 'Your password should be at least 8 characters')\n// });\n\n\nconst Form = () => {\n\n  const [values, setValues] = useState({login: \"\", password: \"\"});\n  const [errors, setErrors] = useState({login: \"\", password: \"\"});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n\n  const handleChange = event => {\n    console.log(event.target.name);\n    console.log(event.target.value);\n\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(validate(values));\n    set\n    submit();\n  }\n\n  function submit() {\n    console.log(\"Submitted Successfully\");\n  }\n\n  function validate(values) {\n    let errors = {};\n    if (!values.login) {\n      errors.login = \"Login is required\";\n    } else if (values.login.length < 8) {\n      errors.login = \"Email address should be 8 or more characters\";\n    }\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 10) {\n      errors.password = \"Password needs to be more than 10 characters\";\n    }\n    return errors;\n  }\n\n  return (\n  <div>\n      <h1>Check components/Form.js file</h1>\n      <p>Below you fill find register and login forms.</p>\n      <p>Validate values of each field on your preferences. The more secure the better.</p>\n      <p>After user submitted register form inform him about it and store user data somewhere.</p>\n      <p>When submiting login form check if such a user has been registered.</p>\n      <p>If user exists hide all the forms and show a test 'Logged in successfully'</p>\n      <p>If user does not exist then show an error message below login button</p>\n      <form onSubmit={handleSubmit}>\n        <h1>Register</h1>\n        <input \n          placeholder=\"Login\"\n          type=\"text\" \n          name=\"login\" \n          value={values.login}\n          onChange={handleChange}\n        />\n        {errors.login && <p>{errors.login}</p>}\n\n        <input \n          placeholder=\"Password\" \n          type=\"password\" \n          name=\"password\"\n          value={values.password}\n          onChange={handleChange}\n           \n        />\n        {errors.password && <p>{errors.password}</p>}\n\n\n        \n        <input type=\"submit\" />\n      </form>\n      <div>\n        <h1>Login</h1>\n        <input  placeholder=\"Login\" type=\"text\" name=\"login\" />\n        <input placeholder=\"Password\" type=\"password\" name=\"password\" />\n        <input type=\"submit\" value=\"Login\" />\n      </div>\n    </div>\n  )\n}\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}