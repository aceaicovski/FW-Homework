{"ast":null,"code":"var _jsxFileName = \"/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// const validationSchema = Yup.object({\n//   login: Yup.string().required('Please enter the login').min(10, 'Your login should be 10 characters or more'),\n//   password: Yup.string().required('Please enter the password').min(8, 'Your password should be at least 8 characters')\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    setError(\"\");\n    props.onChange(event.target.name, event.target.value);\n  };\n\n  const validate = () => {\n    //return true if is valid \n    //else return false\n    if (props.validation) {\n      const rules = props.validation.split(\"|\");\n\n      for (let i = 0; i < rules.length; i++) {\n        const current = rules[i];\n\n        if (current === \"required\") {\n          if (!value) {\n            setError(\"This field is required\");\n            return false;\n          }\n        }\n\n        const pair = current.split(\":\");\n\n        switch (pair[0]) {\n          case \"min\":\n            if (value.length < pair[1]) {\n              setError(`This field must be at least ${pair[1]} charactesr long`);\n              return false;\n            }\n\n            break;\n\n          case \"max\":\n            if (value.length > pair[1]) {\n              setError(`This field must be no longer than ${pair[1]} charactesr long`);\n              return false;\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      validate: () => validate()\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check components/Form.js file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Below you fill find register and login forms.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Validate values of each field on your preferences. The more secure the better.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"After user submitted register form inform him about it and store user data somewhere.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"When submiting login form check if such a user has been registered.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user exists hide all the forms and show a test 'Logged in successfully'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user does not exist then show an error message below login button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Login\",\n        type: \"text\",\n        name: \"login\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), formik.touched.login && formik.errors.login ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Login\",\n        type: \"text\",\n        name: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n}, \"OJ/wBSEjfLEp3Gii/ESXatxjAxw=\", true));\n_c2 = Form;\nForm.defaultProps = {\n  placeholder: \"\",\n  name: \"\",\n  type: \"text\",\n  value: \"\",\n  autoComplete: \"off\",\n  validation: \"\"\n};\nexport default Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form$forwardRef\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js"],"names":["React","Form","forwardRef","props","ref","value","setValue","useState","error","setError","handleChange","event","target","onChange","name","validate","validation","rules","split","i","length","current","pair","useImperativeHandle","formik","handleSubmit","handleBlur","values","login","touched","errors","password","defaultProps","placeholder","type","autoComplete"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n\n// const validationSchema = Yup.object({\n//   login: Yup.string().required('Please enter the login').min(10, 'Your login should be 10 characters or more'),\n//   password: Yup.string().required('Please enter the password').min(8, 'Your password should be at least 8 characters')\n// });\n\n\nconst Form = forwardRef((props, ref) => {\n\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n    setError(\"\");\n    props.onChange(event.target.name, event.target.value)\n  }\n  \n const validate = () => {\n    //return true if is valid \n    //else return false\n\n    if (props.validation) {\n      const rules = props.validation.split(\"|\");\n\n      for (let i = 0; i < rules.length; i++) {\n        const current = rules[i];\n\n        if (current === \"required\") {\n          if (!value) {\n            setError(\"This field is required\");\n            return false\n          }\n        }\n\n        const pair = current.split(\":\")\n        switch (pair[0]) {\n          case \"min\":\n            if (value.length < pair[1]) {\n              setError(`This field must be at least ${pair[1]} charactesr long`);\n              return false\n            }\n            break;\n          case \"max\":\n            if (value.length > pair[1]) {\n              setError(`This field must be no longer than ${pair[1]} charactesr long`);\n              return false;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      validate: () => validate()\n    }\n  })\n\n\n  return (\n  <div>\n      <h1>Check components/Form.js file</h1>\n      <p>Below you fill find register and login forms.</p>\n      <p>Validate values of each field on your preferences. The more secure the better.</p>\n      <p>After user submitted register form inform him about it and store user data somewhere.</p>\n      <p>When submiting login form check if such a user has been registered.</p>\n      <p>If user exists hide all the forms and show a test 'Logged in successfully'</p>\n      <p>If user does not exist then show an error message below login button</p>\n      <div onSubmit={formik.handleSubmit}>\n        <h1>Register</h1>\n        <input \n          placeholder=\"Login\"\n          type=\"text\" \n          name=\"login\" \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.login}\n        />\n        {formik.touched.login && formik.errors.login ? (\n         <div>{formik.errors.login}</div>\n       ) : null}\n\n        <input \n          placeholder=\"Password\" \n          type=\"password\" \n          name=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}  \n        />\n\n        {formik.touched.password && formik.errors.password ? (\n         <div>{formik.errors.password}</div>\n       ) : null}\n        \n        <input type=\"submit\" />\n      </div>\n      <div>\n        <h1>Login</h1>\n        <input  placeholder=\"Login\" type=\"text\" name=\"login\" />\n        <input placeholder=\"Password\" type=\"password\" name=\"password\" />\n        <input type=\"submit\" value=\"Login\" />\n      </div>\n    </div>\n  )\n})\n\nForm.defaultProps = {\n  placeholder: \"\",\n  name: \"\",\n  type: \"text\",\n  value: \"\",\n  autoComplete: \"off\",\n  validation: \"\"\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}