{"ast":null,"code":"var _jsxFileName = \"/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup'; // const validationSchema = Yup.object({\n//   login: Yup.string().required('Please enter the login').min(10, 'Your login should be 10 characters or more'),\n//   password: Yup.string().required('Please enter the password').min(8, 'Your password should be at least 8 characters')\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      login: '',\n      password: ''\n    },\n    validationSchema: {\n      login: Yup.string().required('Please enter the login').min(10, 'Your login should be 10 characters or more'),\n      password: Yup.string().required('Please enter the password').min(8, 'Your password should be at least 8 characters')\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check components/Form.js file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Below you fill find register and login forms.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Validate values of each field on your preferences. The more secure the better.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"After user submitted register form inform him about it and store user data somewhere.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"When submiting login form check if such a user has been registered.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user exists hide all the forms and show a test 'Logged in successfully'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If user does not exist then show an error message below login button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Login\",\n        type: \"text\",\n        name: \"login\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), formik.touched.login && formik.errors.login ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Login\",\n        type: \"text\",\n        name: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Form, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/ceaicovschi/Desktop/Work/Fusion Works Internship/Homework/Events Homework/homework/src/components/Form.js"],"names":["React","useFormik","Yup","Form","formik","initialValues","login","password","validationSchema","string","required","min","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\n// const validationSchema = Yup.object({\n//   login: Yup.string().required('Please enter the login').min(10, 'Your login should be 10 characters or more'),\n//   password: Yup.string().required('Please enter the password').min(8, 'Your password should be at least 8 characters')\n// });\n\n\nconst Form = () => {\n  \n  const formik = useFormik({\n    initialValues: {\n      login: '',\n      password: '',\n    },\n    validationSchema: {\n      login: Yup.string()\n      .required('Please enter the login')\n      .min(10, 'Your login should be 10 characters or more'),\n      password: Yup.string()\n      .required('Please enter the password')\n      .min(8, 'Your password should be at least 8 characters'),\n  },\n    onSubmit: values => {\n      alert(JSON.stringify(values))\n    }\n  });\n\n  return (\n  <div>\n      <h1>Check components/Form.js file</h1>\n      <p>Below you fill find register and login forms.</p>\n      <p>Validate values of each field on your preferences. The more secure the better.</p>\n      <p>After user submitted register form inform him about it and store user data somewhere.</p>\n      <p>When submiting login form check if such a user has been registered.</p>\n      <p>If user exists hide all the forms and show a test 'Logged in successfully'</p>\n      <p>If user does not exist then show an error message below login button</p>\n      <div onSubmit={formik.handleSubmit}>\n        <h1>Register</h1>\n        <input \n          placeholder=\"Login\"\n          type=\"text\" \n          name=\"login\" \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.login}\n        />\n        {formik.touched.login && formik.errors.login ? (\n         <div>{formik.errors.login}</div>\n       ) : null}\n\n        <input \n          placeholder=\"Password\" \n          type=\"password\" \n          name=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}  \n        />\n\n        {formik.touched.password && formik.errors.password ? (\n         <div>{formik.errors.password}</div>\n       ) : null}\n        \n        <input type=\"submit\" />\n      </div>\n      <div>\n        <h1>Login</h1>\n        <input  placeholder=\"Login\" type=\"text\" name=\"login\" />\n        <input placeholder=\"Password\" type=\"password\" name=\"password\" />\n        <input type=\"submit\" value=\"Login\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}